@model WebClass.Models.U_UserSkill


@{

    var skilltype = new SelectList(ViewBag.SkillTypeTable, "SkillTypeID", "SkillTypeName");

}

<style>
    #drag-container {
        display: flex;
        justify-content: space-between;
    }

        #drag-container > .dropzone {
            width: 300px;
            height: 300px;
            background: #dae8fc;
            padding: 10px;
            border: 1px solid #6c8ebf;
            margin: 5px auto;
        }

    .draggable {
        width: 100px;
        height: 30px;
        line-height: 30px;
        background: #f8cecc;
        border: 1px solid #b85450;
        cursor: pointer;
    }
</style>

<div class="container" style="margin-top:50px">
    <div id="drag-container">

        <div class="dropzone basic divskill"></div>

        <div class="row ">
            <div class="form-group col-2 ">
                @Html.DropDownListFor(model => model.U_Skill.SkillTypeID, skilltype, "請選擇")
            </div>
        </div>

        <div class="dropzone completemenu ">
            <div class="col-4 row">

            </div>
        </div>

    </div>
</div>





<script>

    $(document).ready(function () {
        $("#U_Skill_SkillTypeID").change(function () {
           
            $.ajax({
                type: 'GET',
                url: `@Url.Action("_EditSkill", "User")?stid=${$(this).val()}`,
                success: function (data) {
                    $(".divskill").html(data);
                },

                complete: function (data) {
                    let draggable = document.getElementsByClassName(`draggable`);

                    $.each(draggable, function (key, ele) {

                        ele.addEventListener('dragstart', (ev) => {
                            ev.dataTransfer.setData('text/plain', ev.target.id);
                            ev.target.style.opacity = ".5";
                        });

                        ele.addEventListener("dragend", (ev) => {
                            ev.target.style.opacity = "1";
                        });
                    })

                    let dropzones = document.querySelectorAll('.dropzone');
                    dropzones.forEach((dropzone) => {

                        dropzone.addEventListener('dragenter', (ev) => {
                            ev.preventDefault();
                            dropzone.style.borderStyle = 'dashed';
                            return false;
                        });

                        dropzone.addEventListener('dragover', (ev) => {
                            ev.preventDefault();
                            return false;
                        });

                        dropzone.addEventListener('dragleave', (ev) => {
                            dropzone.style.borderStyle = 'solid';
                        });

                        dropzone.addEventListener('drop', (ev) => {
                            ev.preventDefault()
                            ev.target.style.borderStyle = 'solid';
                            const sourceId = ev.dataTransfer.getData('text/plain')
                            console.log(sourceId)
                            ev.target.append(document.getElementById(sourceId))
                        })
                    })
                }
            })
        })
    })

</script>
